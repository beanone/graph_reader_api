{
    "info": {
        "name": "Graph Reader API",
        "description": "API tests for graph reader operations",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "0. Authentication",
            "item": [
                {
                    "name": "0. Login",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/x-www-form-urlencoded"
                            }
                        ],
                        "body": {
                            "mode": "urlencoded",
                            "urlencoded": [
                                {
                                    "key": "username",
                                    "value": "testuser@example.com",
                                    "type": "text"
                                },
                                {
                                    "key": "password",
                                    "value": "testpassword123",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{login_url}}/auth/jwt/login",
                            "host": [
                                "{{login_url}}"
                            ],
                            "path": [
                                "auth",
                                "jwt",
                                "login"
                            ]
                        },
                        "description": "Obtain JWT access token from login service"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test('Status code is 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "pm.test('Response has access token', function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('access_token');",
                                    "    pm.globals.set('access_token', jsonData.access_token);",
                                    "});"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "1. API Key Management",
            "item": [
                {
                    "name": "Create API Key",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token}}",
                                "type": "text"
                            },
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"service_id\": \"graph-reader\",\n    \"name\": \"Test API Key\",\n    \"expires_at\": \"{{expires_at}}\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/api-keys/",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api-keys",
                                ""
                            ]
                        },
                        "description": "Create a new API key for the authenticated user"
                    },
                    "event": [
                        {
                            "listen": "prerequest",
                            "script": {
                                "exec": [
                                    "// Set expires_at to 1 year from now",
                                    "const oneYearFromNow = new Date();",
                                    "oneYearFromNow.setFullYear(oneYearFromNow.getFullYear() + 1);",
                                    "pm.variables.set('expires_at', oneYearFromNow.toISOString());"
                                ],
                                "type": "text/javascript"
                            }
                        },
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test('Status code is 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "pm.test('Response has API Key', function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('id');",
                                    "    pm.expect(jsonData).to.have.property('plaintext_key');",
                                    "    pm.globals.set('api_key', jsonData.plaintext_key);",
                                    "    pm.globals.set('api_key_id', jsonData.id);",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "List API Keys",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api-keys/",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api-keys",
                                ""
                            ]
                        },
                        "description": "List all API keys for the authenticated user"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test('Status code is 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "pm.test('Response is an array', function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "Delete API Key",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/api-keys/{{api_key_id}}",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "api-keys",
                                "{{api_key_id}}"
                            ]
                        },
                        "description": "Delete an API key"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test('Status code is 204', function () {",
                                    "    pm.response.to.have.status(204);",
                                    "});"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "2. Entity Operations (JWT)",
            "item": [
                {
                    "name": "Get Entity",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test('Status code is 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response has correct entity data', function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('entity_id');",
                                    "    pm.expect(jsonData).to.have.property('properties');",
                                    "    pm.expect(jsonData.properties).to.have.property('name');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/entity/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "entity",
                                "1"
                            ]
                        },
                        "description": "Get entity by ID"
                    }
                },
                {
                    "name": "Get Entity Not Found",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test('Status code is 404', function () {",
                                    "    pm.response.to.have.status(404);",
                                    "});",
                                    "",
                                    "pm.test('Error message is correct', function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.detail).to.equal('Entity not found');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/entity/999",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "entity",
                                "999"
                            ]
                        },
                        "description": "Get non-existent entity"
                    }
                },
                {
                    "name": "Get Entity Neighbors",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test('Status code is 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response has neighbors array', function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('neighbors');",
                                    "    pm.expect(jsonData.neighbors).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/entity/1/neighbors",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "entity",
                                "1",
                                "neighbors"
                            ]
                        },
                        "description": "Get entity neighbors"
                    }
                }
            ]
        },
        {
            "name": "3. Entity Operations (API Key)",
            "item": [
                {
                    "name": "Get Entity",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test('Status code is 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response has correct entity data', function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('entity_id');",
                                    "    pm.expect(jsonData).to.have.property('properties');",
                                    "    pm.expect(jsonData.properties).to.have.property('name');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "X-API-Key",
                                "value": "{{api_key}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/entity/1",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "entity",
                                "1"
                            ]
                        },
                        "description": "Get entity by ID using API key"
                    }
                },
                {
                    "name": "Get Entity Not Found",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test('Status code is 404', function () {",
                                    "    pm.response.to.have.status(404);",
                                    "});",
                                    "",
                                    "pm.test('Error message is correct', function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.detail).to.equal('Entity not found');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "X-API-Key",
                                "value": "{{api_key}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/entity/999",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "entity",
                                "999"
                            ]
                        },
                        "description": "Get non-existent entity using API key"
                    }
                },
                {
                    "name": "Get Entity Neighbors",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test('Status code is 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response has neighbors array', function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('neighbors');",
                                    "    pm.expect(jsonData.neighbors).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "X-API-Key",
                                "value": "{{api_key}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/entity/1/neighbors",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "entity",
                                "1",
                                "neighbors"
                            ]
                        },
                        "description": "Get entity neighbors using API key"
                    }
                }
            ]
        },
        {
            "name": "4. Community Operations (JWT)",
            "item": [
                {
                    "name": "Get Community Members",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test('Status code is 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response has members array', function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('members');",
                                    "    pm.expect(jsonData.members).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/community/team_alpha/members",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "community",
                                "team_alpha",
                                "members"
                            ]
                        },
                        "description": "Get community members"
                    }
                }
            ]
        },
        {
            "name": "5. Community Operations (API Key)",
            "item": [
                {
                    "name": "Get Community Members",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test('Status code is 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response has members array', function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('members');",
                                    "    pm.expect(jsonData.members).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "X-API-Key",
                                "value": "{{api_key}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/community/team_alpha/members",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "community",
                                "team_alpha",
                                "members"
                            ]
                        },
                        "description": "Get community members using API key"
                    }
                }
            ]
        },
        {
            "name": "6. Search Operations (JWT)",
            "item": [
                {
                    "name": "Search by Property",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test('Status code is 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response has entity_ids array', function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('entity_ids');",
                                    "    pm.expect(jsonData.entity_ids).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/search?key=name&value=Alice",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "search"
                            ],
                            "query": [
                                {
                                    "key": "key",
                                    "value": "name"
                                },
                                {
                                    "key": "value",
                                    "value": "Alice"
                                }
                            ]
                        },
                        "description": "Search entities by property"
                    }
                }
            ]
        },
        {
            "name": "7. Search Operations (API Key)",
            "item": [
                {
                    "name": "Search by Property",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test('Status code is 200', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test('Response has entity_ids array', function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData).to.have.property('entity_ids');",
                                    "    pm.expect(jsonData.entity_ids).to.be.an('array');",
                                    "});"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "X-API-Key",
                                "value": "{{api_key}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/search?key=name&value=Alice",
                            "host": [
                                "{{base_url}}"
                            ],
                            "path": [
                                "search"
                            ],
                            "query": [
                                {
                                    "key": "key",
                                    "value": "name"
                                },
                                {
                                    "key": "value",
                                    "value": "Alice"
                                }
                            ]
                        },
                        "description": "Search entities by property using API key"
                    }
                }
            ]
        }
    ],
    "variable": [
        {
            "key": "base_url",
            "value": "http://localhost:8000",
            "type": "string"
        },
        {
            "key": "login_url",
            "value": "http://localhost:8001",
            "type": "string"
        }
    ]
}
